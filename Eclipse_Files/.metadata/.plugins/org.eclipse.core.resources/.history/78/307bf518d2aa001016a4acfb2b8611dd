/**
 * 
 */
package lu.paul.bertemes.nightcrawler;

import java.io.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * @author paulbertemes
 *
 */
public class UrlParser {
	
	private static 	Pattern m_urlPattern;
	private 		Matcher m_PatternMatcher;
	
	public UrlParser()
	{	
		//Set URL pattern detector
		m_urlPattern = Pattern.compile("(?:^|[\\W])((ht|f)tp(s?):\\/\\/|www\\.)"+"(([\\w\\-]+\\.){1,}?([\\w\\-.~]+\\/?)*"+"[\\p{Alnum}.,%_=?&#\\-+()\\[\\]\\*$~@!:/{};']*)",
				Pattern.CASE_INSENSITIVE | Pattern.MULTILINE | Pattern.DOTALL);	
	}
		
	public void extractHrefs() throws Exception{
		
		//Variables
//		FileReader 		rFile 		= new FileReader(SourceName);
//		FileWriter 		wFile 		= new FileWriter(DestName);
//		BufferedReader 	rBuffer 	= new BufferedReader(rFile);
//		BufferedWriter 	wBuffer 	= new BufferedWriter(wFile);
//		String 			sReadString = new String("");
		
		//Read Page Content and extract hyperlinks
		do
		{
			sReadString = rBuffer.readLine();
			System.out.println(sReadString);
			
		}while(sReadString != null);
	}
	
	public String extractUrl(String sMatchString){
		
		//Initialize Variables
		int nMatchStart = 0;
		int nMatchEnd	= 0;
		
		//Find URL Expressions
		m_PatternMatcher = m_urlPattern.matcher(sMatchString);
		
		
		while (m_PatternMatcher.find()) {
		    nMatchStart = m_PatternMatcher.start(1);
		    nMatchEnd 	= m_PatternMatcher.end();
		}
		return(sMatchString.substring(nMatchStart, nMatchEnd));
	}

	public static void main(String[] args) throws Exception {

		//test href extraction
		UrlParser urlParser = new UrlParser();

		String temp = urlParser.extractUrl("this is a link to <a href=\" http://www.google.com \"> Link1 </a>, so hear me");
		
		System.out.println("this is a link to <a href=\" http://www.google.com \"> Link1 </a>, so hear me");
		System.out.println(temp);
		}
}
