import java.security.*;
import java.io.*;
import java.net.*;

public class Util
{

   //Find the base URL of a string of URL    
   public static String getBaseUrl(URL pageUrl)
   {
     String urlStr   = pageUrl.toString();
     String urlFile  = pageUrl.getFile();
     String protocol = pageUrl.getProtocol();
      
     protocol = protocol +"://";
     String urlNoProtocol = urlStr.toLowerCase().substring(protocol.length());
     String urlPath;
     
     if (urlNoProtocol.indexOf("/") == -1 )
     {  urlStr = urlStr + "/";
         return urlStr;
     }
     else
        urlPath = urlFile.substring(urlFile.lastIndexOf("/"));
     
   
     if ( !urlStr.endsWith( "/" ) && urlPath.lastIndexOf(".")==-1 && urlPath.lastIndexOf("?")==-1 )
       return urlStr + "/";
    
     return urlStr.substring( 0, urlStr.lastIndexOf( '/' ) + 1 );
   }
   
   
    // Verify URL format.
   public static URL verifyUrl(String url) 
   {
      // Only allow HTTP URLs.
      if (!url.toLowerCase().startsWith("http://"))
        return null;
      
      URL verifiedUrl = null;
      try {
        verifiedUrl = new URL(url);
      } catch (Exception e) {
        return null;
      }
      return verifiedUrl;
   }
   
   // convert the hash value to Hexadecimal format
   // @param aInput[] , array of byte , the value of hash value generated by getHashValue()
   // @return hexaDecimal code of the hash value, in 128 length string
   public static  String hexEncode( byte[] aInput)
   {         
     StringBuffer result = new StringBuffer();
       char[] digits = {'0', '1', '2', '3', '4','5','6','7','8','9','a','b','c','d','e','f'};
        
       for ( int idx = 0; idx < aInput.length; ++idx) {
         byte b = aInput[idx];
         result.append( digits[ (b&0xf0) >> 4 ] );
         result.append( digits[ b&0x0f] );
        }
       return result.toString();
   }
    
    
   //Get hash value for each URL, so that no duplicate URL is crawled twice  
   //@param strURL , the URL in string format
   //@return hashvalue in Hexadecimal format , converted to hex value by hexEncode()
   public static String getHashValue( String strURL) 
   { 
    try {
         MessageDigest md  = MessageDigest.getInstance("SHA-256");
         byte[] hashValue = md.digest(strURL.getBytes());
         return hexEncode(hashValue);
       }catch(NoSuchAlgorithmException e) {
            System.out.println("ERROR : " + e );
            return "";
       }   
    }
   
  
}